#!/bin/env bash

# shellcheck disable=SC2155

set -e

base_url="https://goload.pro"
version="1.0"
agent="Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0"
player_fn="mpv"

echo "Ani-cli for rofi $version"

die () { echo "${0}: $*" >&2; exit 1; }

err () { echo "${0}: $*" >&2; exit 1; }

dep_ch () {
	for dep; do
		[[ $(which "$dep") ]] || die "Program '$dep' not found."
	done
}

search_anime () {
	read -r input
	local search=$(printf '%s' "$input" | tr ' ' '-' )
	curl -A "$agent" -s "$base_url/search.html" -G -d "keyword=$search" \
		|	sed -nE 's_^[[:space:]]*<a href="/videos/([^"]*)">_\1_p'
}

get_dpage_link() {
	# get the download page url
	anime_id="$1"
	anime_id="${anime_id%-*}-"
	episode=$2

	curl -A "$agent" -s "$base_url/videos/${anime_id}${episode}" \
		| sed -nE 's_^[[:space:]]*<iframe src="([^"]*)".*_\1_p' \
		|	sed 's/^/https:/g'
}

decrypt_link() {
	dpage_url="$1"
	ajax_url="$base_url/encrypt-ajax.php"
	resp=$(curl -A "$agent" -s "$dpage_url")
	id=$(printf "%s" "$dpage_url" | sed -nE 's/.*id=(.*)&title.*/\1/p')
	secret_key=$(printf "%s" "$resp" \
		| sed -nE 's/.*class="container-(.*)">/\1/p' \
		| tr -d "\n" | od -A n -t x1 | tr -d " |\n")
	iv=$(printf "%s" "$resp" \
		| sed -nE 's/.*class="wrapper container-(.*)">/\1/p' \
		| tr -d "\n" | od -A n -t x1 | tr -d " |\n")
	second_key=$(printf "%s" "$resp" \
		| sed -nE 's/.*class=".*videocontent-(.*)">/\1/p' \
		| tr -d "\n" | od -A n -t x1 | tr -d " |\n")
	token=$(printf "%s" "$resp" | sed -nE 's/.*data-value="(.*)">.*/\1/p' \
		| base64 -d \
		| openssl enc -d -aes256 -K "$secret_key" -iv "$iv" 2>/dev/null \
		| sed -nE 's/.*&(token.*)/\1/p')
	ajax=$(printf '%s' "$id" \
		| openssl enc -e -aes256 -K "$secret_key" -iv "$iv" 2>/dev/null \
		| base64)
	data=$(curl -A "$agent" -s -H "X-Requested-With:XMLHttpRequest" "${ajax_url}?id=${ajax}&alias=${id}&${token}" \
		| sed -e 's/{"data":"//' -e 's/"}/\n/' -e 's/\\//g')
	echo "$data" \
		| base64 -d 2>/dev/null \
		| openssl enc -d -aes256 -K "$second_key" -iv "$iv" 2>/dev/null \
		| sed -e 's/\].*/\]/' -e 's/\\//g' \
		| grep -Eo 'https:\/\/[-a-zA-Z0-9@:%._\+~#=][a-zA-Z0-9][-a-zA-Z0-9@:%_\+.~#?&\/\/=]*'
}

get_user_input () {
	{ [ -n "$*" ] && echo "$*"; } || rofi -dmenu -l 0
}

anime_selection () {
	declare -a search_results

	readarray search_results

	echo -e "${search_results[@]}" | rofi -dmenu | awk '{print $1}'
}

open_episode () {
	anime_id="$1"

	episode="$2"

	dpage_link=$(get_dpage_link "$anime_id" "$episode")

	video_url=$(decrypt_link "$dpage_link")

	referer_link="https://sbplay2.com"

	"$player_fn" --http-header-fields="Referer:$referer_link" "$video_url"
}

get_episode () {
	declare -a cmd_rofi

	cmd_rofi+=("rofi")
	cmd_rofi+=("-theme-str")
	#shellcheck disable=2016
	cmd_rofi+=('"entry { placeholder: \"Episodes from 1 to $1\"; }"')
	cmd_rofi+=("-dmenu -l 0")

	eval "${cmd_rofi[*]}"
}

main() {
	dep_ch "curl" "sed" "grep" "git" "jq" "openssl" "mpv"

	local selection=$(get_user_input "$*" \
		| search_anime \
		| anime_selection)

	local episodes="${selection##*-}"

	while :; do
		local episode
		# Read
		read -r episode <<< "$(get_episode "$episodes")"
		# Check
		[ -z "$episode" ] && break
		# Play
		open_episode "$selection" "$episode"
	done

	notify-send -t 1000 "ani-rofi finished"
}

main "$@"
